/**
 * File:
 *	User.ycp
 *
 * Module:
 *	User
 *
 * Summary:
 *	This module holds the user data
 *
 * Authors:
 *	Anas Nashif <nashif@suse.de>
 *
 * $Id$
 */
{

    module "User";
    textdomain "users";

    import "Installation";
    import "Mode";

    // Encryption method: "des", "md5" - for future use: "blowfish"
    global string encryptionMethod = "des";

    // The root user
    global string rootPassword = "";

    // The primary user
    //////////////////////////////

    // password
    global string password = "";

    // login
    global string login = "";

    // first name
    global string forename = "";

    // last name
    global string surname = "";

    /**
      * Creates user account
      * @return 0 on success
      */
    global define integer CreateSysUser()
    ``{
	// FIXME: should be looked up dynamically (first free above 500)
	string uid = "500";
	integer ret = 0;

	// back to console encoding
	string comment = UI::Recode ("UTF-8", UserDefs::encoding, sformat("\"%1 %2\"", forename, surname ));

	if (!Mode::test)
	{
	    y2milestone("Creating user account");
	    ret = SCR::Execute(.target.bash, sformat("/usr/sbin/useradd -G users,dialout,uucp,video,audio -c %4 -u %1 -m -p %2 %3 ",
			 uid, password, login, comment));
	}
	return ret;
    }

    /**
      * Writes password of superuser
      * @return true on success
      */
    global define boolean SetRootPassword()
   ``{
	return (SCR::Write(.target.passwd.root, rootPassword));
    }
}

