/**
 * File:
 *  users.ycp
 *
 * Module:
 *  Configuration of the users and groups stettings
 *
 * Summary:
 *  Main file.
 *
 * Authors:
 *  Johannes Buchhold <jbuch@suse.de>
 *
 * $Id$
 *
 * Main file of yast2-config-users package. Calls all other modules.
 */

{
    /***
     * <H3>YaST2 Configuration of the users and groups</H3>
     */

    textdomain "users";

    // ===== import modules ===========================================
    import "Wizard";
    import "Console";
    import "Mode";
    import "Report";

    import "UserDefs";
    import "UserAddDefs";
    import "UserSettings";
    import "UserWriteStack";


    // ===== arguments ================================================
    string  start_dialog	   = "users";
    integer arg		   = 0;
    list    possible_start_dialogs = ["user_add", "group_add", "groups", "users" ];

    while ( arg < size( Args() ) )
    {
	// TODO .test in Mode
	string a = Args( arg );
	if ( contains( possible_start_dialogs, a))
	{
	    start_dialog = Args( arg );
	}
	arg = arg + 1;
    }


    y2debug( "Starting with %1 - test mode: %2", start_dialog, Mode::test );


    // ===== Definitions ==============================================
    map group_in_work = $[];
    map user_in_work  = $[];

    integer focusline_group = 0;
    integer focusline_user  = 0;
    boolean view_all_users  = false;
    boolean view_all_groups = false;

    boolean start_sequencer_again  = false;

    // ===== includes =================================================
    include "wizard/sequencer.ycp";
    include "users/ui.ycp";


    // ===== change start dialog =========================================
    // if in inst-system and one user was already created switsch to overview


    if( start_dialog == "user_add" && ( Mode::cont ))
    {
	map non_system_user = filter(`key, `user, UserSettings::current_users,
				     ``( ( user["uid"]:0 >   UserDefs::max_system_uid) && user["username"]:"" != "nobody"  ));

	if( size( non_system_user ) > 0 )
	{
	    start_dialog = "users";
	}
    }


    // ===== Open UI ==================================================
    if( ! Mode::cont )
    {
	Wizard::CreateDialog();
    }

    // ===== Read all system settings =================================
    if ( ReadDialog(! Mode::cont ) == `abort ) return `abort;



    // ===== Data for the WizardSequencer =============================
    map aliases = $[
	"users":         ``(usersUsersDialog()),
        "user_add":      ``(usersEditUser(`add_user)),
        "user_clone":    ``(usersEditUser(`clone_user)),
        "user_edit":     ``(usersEditUser(`edit_user)),
	"user_details":  ``(usersEditUserDetails()),
	"user_password": ``(usersEditUserPassword()),
        "user_delete":   ``(usersDeleteUser()),
	"user_save":     ``(UserWriteStack::UserSave(user_in_work, start_dialog == "user_add" )),

	"groups":        ``(usersGroupsDialog()),
        "group_add":     ``(usersEditGroup(`add_group)),
        "group_clone":   ``(usersEditGroup(`clone_group)),
        "group_edit":    ``(usersEditGroup(`edit_group)),
        "group_delete":  ``(usersDeleteGroup()),
	"group_save"  :  ``(UserWriteStack::GroupSave(group_in_work,  start_dialog == "group_add")),

	"without_save" :  ``(usersReallyAbort()),
	"save_to_system": ``(UserWriteStack::SaveDialog(true ))
    ];

    map main_sequence = $[
        "ws_start":      start_dialog,
        "users":         $[ `switch_groups:  "groups",
			    `switch_users:   "users",
			    `new:            "user_add",
		            `clone:          "user_clone",
		            `edit:           "user_edit",
		            `delete:         "user_delete",
		            `next:           "save_to_system",
			    `abort:          "without_save",
			    `cancel:         "without_save",
			    `exit:           `abort ],
	"user_add":      $[ `nextmodule:     `next,
			    `nosave:         `next,
			    `next:           "user_save",
			    `details:        "user_details",
			    `passwordsettings: "user_password",
			    `abort:          "without_save",
			    `cancel:         "without_save",
			    `back:           "users" ],
	"user_clone":    $[ `next:           "user_save",
			    `details:        "user_details",
			    `passwordsettings: "user_password",
			    `cancel:         "without_save",
	                    `abort:          "without_save" ],
	"user_details":  $[ `abort:          "without_save",
			    `add_user:       "user_add",
			    `cancel:         "without_save",
			    `clone_user:     "user_clone",
			    `edit_user:      "user_edit"],
	"user_password":  $[ `abort:         "without_save",
			    `add_user:       "user_add",
			    `cancel:         "without_save",
			    `clone_user:     "user_clone",
			    `edit_user:      "user_edit"],
	"user_edit":     $[ `next:           "user_save",
			    `details:        "user_details",
			    `passwordsettings: "user_password",
			    `cancel:         "without_save",
	                    `abort:          "without_save" ],
	"user_delete":   $[ `next:           "users",
	                    `abort:          `abort ],
	"user_save":     $[ `next:	     "users",
			    `save:           "save_to_system"],
        "groups":        $[ `switch_users:   "users",
			    `switch_groups:  "groups",
	                    `new:            "group_add",
		            `clone:          "group_clone",
			    `edit:           "group_edit",
		            `delete:         "group_delete",
		            `next:           "save_to_system",
		            `abort:          "without_save",
			    `cancel:         "without_save",
			    `exit:           `abort ],
	"group_add":     $[ `next:           "group_save",
	                    `abort:          "without_save",
			    `cancel:         "without_save",
			    `back:           "groups" ],
	"group_clone":   $[ `next:           "group_save",
			    `cancel:         "without_save",
	                    `abort:          "group_save" ],
	"group_edit":    $[ `next:           "group_save",
			    `cancel:         "without_save",
	                    `abort:          "without_save" ],
	"group_delete":  $[ `next:           "groups",
			    `abort:          "without_save" ],
	"group_save"  :  $[ `next:           "groups",
			    `save:           "save_to_system" ],
	"without_save":  $[ `next  :         `next,
			    `abort :         `abort,
			    `back  :         `back   ],
	"save_to_system": $[ `next:	     `next ]

    ];




    // ===== Start the sequence =======================================
    any ret = WizardSequencer(aliases, main_sequence);


    // ===== Restart the sequence =====================================
    if ( start_sequencer_again )
    {

	if( Mode::test ) y2milestone(" Start sequencer again");
	start_sequencer_again = false;

	UserWriteStack::Reset();

	group_in_work = $[];
	user_in_work  = $[];

	UserSettings::ReadSettingsFromDisk(true);

	start_dialog		  ="users";
	main_sequence["ws_start"] ="users";

	ret = WizardSequencer(aliases, main_sequence);

    }

    if( ! Mode::cont )
	UI::CloseDialog();

    y2milestone( "Returning with %1", ret );
    return ret;

} // End
