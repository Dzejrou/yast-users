/**
 * File:
 *  users.ycp
 *
 * Module:
 *  Configuration of the users and groups
 *
 * Summary:
 *  Main file of users.
 *
 * Authors:
 *  Jan Holesovsky <kendy@suse.cz>, 2001
 *
 * $Id$
 *
 * Main file of yast2-config-users package. Calls all other modules.
 */

{
    /***
     * <H3>YaST2 Configuration of the users and groups</H3>
     */

    textdomain "users";

    // ===== arguments ================================================

    boolean test_mode = false;
    if (size (Args ()) > 0 && Args (0) == .test)
        {
            test_mode = true;
        }
  
    // ===== includes =================================================
    include "ui/wizard_dialog.ycp";
    include "wizard/sequencer.ycp";
    
    include "users/ui.ycp";
    include "users/io.ycp";

    // ===== Open UI ==================================================
    UI(`CreateWizardDialog());
    
    // ===== Data for the WizardSequencer =============================
    map aliases = $[
	"users":         ``(usersUsersDialog()),
        "user_add":      ``(usersEditUser(`add_user)),
        "user_clone":    ``(usersEditUser(`clone_user)),
        "user_edit":     ``(usersEditUser(`edit_user)),
	"user_details":  ``(usersEditUserDetails()),
        "user_delete":   ``(usersDeleteUser()),
	
	"groups":        ``(usersGroupsDialog()),
        "group_add":     ``(usersEditGroup(`add_group)),
        "group_clone":   ``(usersEditGroup(`clone_group)),
        "group_edit":    ``(usersEditGroup(`edit_group)),
	"group_details": ``(usersEditGroupDetails()),
        "group_delete":  ``(usersDeleteGroup())
    ];

    map main_sequence = $[
        "ws_start":      "users",
        "users":         $[ `switch_groups:  "groups",
	                    `new:            "user_add",
		            `clone:          "user_clone",
		            `edit:           "user_edit",
		            `delete:         "user_delete",
		            `next:           `finish,
		            `abort:          `abort ],
	"user_add":      $[ `next:           "users",
	                    `details:        "user_details",
	                    `abort:          `abort ],
	"user_clone":    $[ `next:           "users",
	                    `details:        "user_details",
	                    `abort:          `abort ],
	"user_details":  $[ `abort:          `abort ],
	"user_edit":     $[ `next:           "users",
	                    `details:        "user_details",
	                    `abort:          `abort ],
	"user_delete":   $[ `next:           "users",
	                    `abort:          `abort ],
        "groups":        $[ `switch_users:   "users",
	                    `new:            "group_add",
		            `clone:          "group_clone",
		            `edit:           "group_edit",
		            `delete:         "group_delete",
		            `next:           `finish,
		            `abort:          `abort ],
	"group_add":     $[ `next:           "groups",
	                    `details:        "group_details",
	                    `abort:          `abort ],
	"group_clone":   $[ `next:           "groups",
	                    `details:        "group_details",
	                    `abort:          `abort ],
	"group_edit":    $[ `next:           "groups",
	                    `details:        "group_details",
	                    `abort:          `abort ],
	"group_details": $[ `abort:          `abort ],
	"group_delete":  $[ `next:           "groups",
	                    `abort:          `abort ]
    ];

    // ===== Definitions ==============================================
    
    // The most important variable
    map user_settings = $[];

    // For cloning and so
    map current_user  = $[];
    map current_group = $[];

    // ===== Read the current /etc/passwd and /etc/group ==============
	
    // ===== Start the sequence =======================================
    
    WizardSequencer(aliases, main_sequence);

    // ===== Write ====================================================
    if (!test_mode)
    {
	usersWrite(user_settings);
    }

} // End
