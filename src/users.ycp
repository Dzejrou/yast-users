/**
 * File:
 *  users.ycp
 *
 * Module:
 *  Configuration of the users and groups stettings
 *
 * Summary:
 *  Main file.
 *
 * Authors:
 *  Johannes Buchhold <jbuch@suse.de>,
 *
 * $Id$
 *
 * Main file of yast2-users package. Calls all other modules.
 */

{

/***
 * <h3>Configuration of users and groups</h3>
 */

//textdomain "users";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("Users module started");

import "Mode";
//    import "./Users";

//include "wizard/sequencer.ycp";
include "./wizards.ycp";

string  start_dialog	   = "users";
integer arg		   = 0;
list    possible_start_dialogs = ["user_add", "group_add", "groups", "users", "user_inst_start" ];

while ( arg < size( Args() ) )
{
	// TODO .test in Mode
	string a = Args( arg );
	if ( contains( possible_start_dialogs, a))
	{
	    start_dialog = Args( arg );
	}
	arg = arg + 1;
}


y2milestone( "Starting with %1 - test mode: %2", start_dialog, Mode::test );


    // ===== Definitions ==============================================
/*
    map group_in_work = $[];
    map user_in_work  = $[];

    integer focusline_group = 0;
    integer focusline_user  = 0;
    boolean view_all_users  = false;
    boolean view_all_groups = false;

    boolean start_sequencer_again  = false;
    */



    // ===== change start dialog =========================================
    // if in inst-system and one user was already created switch to overview

// this has to be moved somewhere after ReadDialog !!
/*
    if( start_dialog == "user_add" && ( Mode::cont ))
    {
	map non_system_user = filter(`key, `user, Users::local_users,
//	map non_system_user = filter(`key, `user, UserSettings::current_users,
				     ``( ( user["uid"]:0 >   Users::max_system_uid) && user["username"]:"" != "nobody"  ));

	if( size( non_system_user ) > 0 )
	{
	    start_dialog = "users";
	}
    }
*/

symbol ret = UsersSequence(start_dialog);

/* Finish */
y2milestone("Users module finished with %1", ret);
y2milestone("----------------------------------------");
return ret;

} // End
